#ifndef IDENTIFIER_H
#define IDENTIFIER_H


typedef enum{
	IDV_ID = 1,
	IDV_MSG,
	IDV_NAME,
	IDV_BREAKPT,
	IDV_BREAKPT_NUM,
	IDV_NUMBER,
	IDV_TYPE,
	IDV_CATCH_TYPE,
	IDV_DISPOSITION,
	IDV_ENABLED,
	IDV_ADDRESS,
	IDV_FUNCTION,
	IDV_FILE,
	IDV_FULLNAME,
	IDV_LINE,
	IDV_AT,
	IDV_PENDING,
	IDV_EVAL_BY,
	IDV_THREAD,
	IDV_TASK,
	IDV_CONDITION,
	IDV_IGNORE,
	IDV_ENABLE,
	IDV_TRACEFRAME,
	IDV_TRACEMARKER,
	IDV_MASK,
	IDV_PASS,
	IDV_ORIG_LOCATION,
	IDV_TIMES,
	IDV_INSTALLED,
	IDV_WHAT,
	IDV_THREAD_GROUP,
	IDV_THREAD_GROUPS,
	IDV_THREADS_STOPPED,
	IDV_PARAM,
	IDV_VALUE,
	IDV_THREAD_ID,
	IDV_GROUP_ID,
	IDV_PROC_ID,
	IDV_MACRO_INFO,
	IDV_TGT_NAME,
	IDV_HOST_NAME,
	IDV_SYM_LOADED,
	IDV_REASON,
	IDV_FRAME,
	IDV_ARG,
	IDV_ARGS,
	IDV_CORE,
	IDV_SIG_NAME,
	IDV_SIG_MEANING,
	IDV_GDBRES_VAR,
	IDV_RETVAL,
	IDV_NUM_CHILD,
	IDV_HAS_MORE,
	IDV_CHANGELIST,
	IDV_INSCOPE,
	IDV_TYPE_CHANGED,
	IDV_NDELETED,
	IDV_LANG,
	IDV_EXP,
	IDV_CHILD,
	IDV_CHILDS,
	IDV_LEVEL,
	IDV_STACK,
	IDV_VARIABLES,
	IDV_EXITCODE,
	IDV_FORMAT,
	IDV_REG_NAMES,
} gdb_id_val_t;

struct gdb_id_t{
	const char* name;
	gdb_id_val_t id;
};

typedef gdb_id_t gdb_id_t;


#endif // IDENTIFIER_H
