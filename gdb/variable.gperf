/* output declarations */
%struct-type
%omit-struct-type
%readonly-tables
%global-table
%includes
%language=C++

/* delimiter */
%delimiters=","

/* naming */
%define slot-name name
%define hash-function-name hash
%define lookup-function-name lookup
%define class-name variable


/* c-code */
%{
	#include <gdb/variable.h>
%}

/* struct-type definition */
struct gdb_var_t;

%%
# variable string						id
id,										V_ID
msg,									V_MSG
name,									V_NAME
bkpt,									V_BREAKPT
bkptno,									V_BREAKPT_NUM
number,									V_NUMBER
type,									V_TYPE
catch-type,								V_CATCH_TYPE
disp,									V_DISPOSITION
enabled,								V_ENABLED
addr,									V_ADDRESS
func,									V_FUNCTION
file,									V_FILE
fullname,								V_FULLNAME
line,									V_LINE
at,										V_AT
pending,								V_PENDING
evaluated-by,							V_EVAL_BY
thread,									V_THREAD
task,									V_TASK
cond,									V_CONDITION
ignore,									V_IGNORE
enable,									V_ENABLE
traceframe-usage,						V_TRACEFRAME
static-tracepoint-marker-string-id,		V_TRACEMARKER
mask,									V_MASK
pass,									V_PASS
original-location,						V_ORIG_LOCATION
times,									V_TIMES
installed,								V_INSTALLED
what,									V_WHAT
thread-group,							V_THREAD_GROUP
thread-groups,							V_THREAD_GROUPS
param,									V_PARAM
value,									V_VALUE
thread-id,								V_THREAD_ID
group-id,								V_GROUP_ID
pid,									V_PROC_ID
macro-info,								V_MACRO_INFO
target-name,							V_TGT_NAME
host-name,								V_HOST_NAME
symbols-loaded,							V_SYM_LOADED
reason,									V_REASON
frame,									V_FRAME
args,									V_ARGS
stopped-threads,						V_THREADS_STOPPED
core,									V_CORE
signal-name,							V_SIG_NAME
signal-meaning,							V_SIG_MEANING
gdb-result-var,							V_GDBRES_VAR
return-value,							V_RETVAL
numchild,								V_NUM_CHILD
has_more,								V_HAS_MORE
changelist,								V_CHANGELIST
in_scope,								V_INSCOPE
type_changed,							V_TYPE_CHANGED
